/*
 * Copyright (c) 2017 by The Funfix Project Developers.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* @flow */

// Testing a la carte import
import type { OptionK } from "../../src/funfix"
import {
  Functor,
  HasFunctor,
  functorOf,
  Option,
  Some
} from "../../src/funfix"

const hasFunctor: HasFunctor<Option<any>> = Option
const instance: Functor<Option<any>> = hasFunctor.__types.functor()

const F: Functor<Option<any>> = functorOf(Option)

const opt1: OptionK<string> = F.map(Some(1), x => String(x))
const opt2: OptionK<number> = F.map(Some(1), x => x + 1)
// $ExpectError
const err1: OptionK<string> = F.map(Some(1), x => x + 1)
